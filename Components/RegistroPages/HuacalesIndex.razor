@page "/Huacales/index"
@using P1_AP_RomelOrtega.Models
@using System.Linq
@using P1_AP1_RomelOrtega.Services
@inject HuacalesService HuacalesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Control de Huacales</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-white text-center">
            <h5 class="mb-0">Consulta de Huacales</h5>
        </div>
        <div class="card-body">
            <div class="row align-baseline-items-center mb-3">
                <div class="col-md-3">
                    <label class="form-label fw-bold">Filtrar por:</label>
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="IdEntrda">IDEntrada</option>
                        <option value="Nombre">Cliente</option>
                    </InputSelect>
                </div>

                <div class="col-md-5">
                    <label class="form-label fw-bold">Búsqueda:</label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar..." />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>

                <div class="col-md-4 text-end mt-4 mt-md-0">
                    <a href="/Huacales/Create" class="btn btn-success">
                        <i class="bi bi-plus-circle me-1"></i> Crear
                    </a>
                </div>
            </div>

            <table class="table table-bordered text-center align-middle" style="border-color: #dee2e6;">
                <thead class="table-light">
                    <tr>
                        <th>IDEntrada</th>
                        <th>Nombre</th>
                        <th>Cantidad</th>
                        <th>Precio</th>
                        <th>Importe</th>
                        <th>Fecha</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ListaHuacales.Count == 0)
                    {
                        <tr>
                            <td colspan="8" class="text-muted">No se encontraron Huacales.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var Huacales in ListaHuacales)
                        {
                            <tr>
                                <td>@Huacales.IdEntrada</td>
                                <td>@Huacales.NombreCliente</td>
                                <td>@Huacales.Cantidad.ToString("N2")</td>
                                <td>@Huacales.Precio.ToString("N2")</td>
                                <td>@Huacales.Importe.ToString("N2")</td>
                                <td>@Huacales.Fecha.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <a href="/Huacales/Edit/@Huacales.IdEntrada" class="btn btn-outline-success btn-sm">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                </td>
                                <td>
                                    <button class="btn btn-outline-danger btn-sm" @onclick="() => PrepararEliminacion(Huacales.IdEntrada)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer bg-white">
            <p class="mb-1"><strong>Total Cantidad:</strong> @TotalCantidad.ToString("N2")</p>
            <p class="mb-0"><strong>Total General:</strong> @TotalImporte.ToString("N2")</p>
        </div>
    </div>
</div>

@if (MostrarModalEliminar)
{
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header bg-primary text-white border-bottom-0">
                <h5 class="card-title mb-0">Eliminar Huacal</h5>
            </div>

            <div class="card-body text-danger py-3">
                <h6 class="card-title mb-0">¿Estás seguro de que deseas eliminar este huacal?</h6>
            </div>

            <div class="card shadow-sm mx-3 mb-3">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><strong>Datos: </strong></h5>
                </div>
                <div class="card-body">
                    @if (HuacalesAeliminar != null)
                    {
                        <p class="mb-2"><strong>IDEntrada:</strong> @HuacalesAeliminar?.IdEntrada</p>
                        <p class="mb-2"><strong>Nombre:</strong> @HuacalesAeliminar?.NombreCliente</p>
                        <p class="mb-2"><strong>Cantidad:</strong> @HuacalesAeliminar?.Cantidad.ToString("N2")</p>
                        <p class="mb-2"><strong>Precio:</strong> @HuacalesAeliminar?.Precio.ToString("N2")</p>
                        <p class="mb-2"><strong>Fecha:</strong> @HuacalesAeliminar?.Fecha.ToString("dd/MM/yyyy")</p>
                    }
                </div>
            </div>

            <div class="card-footer bg-white d-flex gap-2 p-3">
                <button type="button" class="btn btn-secondary" @onclick="() => MostrarModalEliminar = false">
                    <i class="bi bi-arrow-left-circle me-1"></i> Volver
                </button>
                <button type="button" class="btn btn-outline-danger" @onclick="ConfirmarEliminacion">
                    <i class="bi bi-trash me-1"></i> Eliminar
                </button>
            </div>
        </div>
    </div>
}

@code {
    public List<EntradaHuacales> ListaHuacales { get; set; } = new();
    public string Filtro { get; set; } = "IdEntrada";
    public string ValorFiltro { get; set; } = string.Empty;

    private bool MostrarModalEliminar { get; set; } = false;
    private int EntradaIdAeliminar { get; set; }
    private EntradaHuacales? HuacalesAeliminar { get; set; }

    public double TotalCantidad => ListaHuacales.Sum(a => a.Cantidad);
    public decimal TotalImporte => ListaHuacales.Sum(a => a.Importe);

    protected override async Task OnInitializedAsync()
    {
        await CargarGuacales();
    }

    private async Task CargarGuacales()
    {
        var lista = await HuacalesService.Listar(e => true);

        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "IdEntrada" && int.TryParse(ValorFiltro, out int Id))
            {
                lista = lista.Where(e => e.IdEntrada == Id).ToList();
            }
            else if (Filtro == "Nombre")
            {
                lista = lista.Where(e => e.NombreCliente != null &&
                    e.NombreCliente.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
            }
        }
        ListaHuacales = lista;
    }

    private async Task Buscar()
    {
        await CargarGuacales();
    }

    private async Task Eliminar(int IdEntrada)
    {
        if (await this.HuacalesService.Eliminar(IdEntrada))
        {
            await CargarGuacales();
        }
    }

    private void PrepararEliminacion(int IdEntrada)
    {
        EntradaIdAeliminar = IdEntrada;
        HuacalesAeliminar = ListaHuacales.FirstOrDefault(e => e.IdEntrada == IdEntrada);
        MostrarModalEliminar = true;
    }

    private async Task ConfirmarEliminacion()
    {
        if (await HuacalesService.Eliminar(EntradaIdAeliminar))
        {
            MostrarModalEliminar = false;
            await CargarGuacales();
        }
    }
}
