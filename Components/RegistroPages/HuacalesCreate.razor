@page "/Huacales/Create"
@using P1_AP_RomelOrtega.Models
@using System.Linq
@using P1_AP1_RomelOrtega.Services
@inject HuacalesService HuacalesService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Control de huacales</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bd-white text-center">
            <h5 class="mb-0">Agregar nuevo huacal</h5>
        </div>
        <div class="card-body">
            <EditForm Model="Huacales" OnValidSubmit="GuardarGuacal">
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="Nombre" class="form-label fw-bold">Nombre:</label>
                        <InputText id="nombre" class="form-control" @bind-Value="Huacales.NombreCliente" />
                        <ValidationMessage For="() => Huacales.NombreCliente" />
                    </div>
                    <div class="col-md-6 mb-3">
	                    <label for="Precio" class="form-label fw-bold">Precio:</label>
	                    <InputNumber id="Precio" class="form-control" @bind-Value="Huacales.Precio" TValue="decimal" />
	                    <ValidationMessage For="() => Huacales.Precio" />
                    </div>
                    <div class="col-md-6 mb-3">
	                    <label for="Cantidad" class="form-label fw-bold">Cantidad:</label>
	                    <InputNumber id="Cantidad" class="form-control" @bind-Value="Huacales.Cantidad" TValue="double" />
	                    <ValidationMessage For="() => Huacales.Cantidad" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="Fecha" class="form-label fw-bold">Fecha del Aporte:</label>
                        <InputDate id="Fecha" class="form-control" @bind-Value="Huacales.Fecha" />
                        <ValidationMessage For="() => Huacales.Fecha" />
                    </div>
                </div>
                <div class="d-flex justify-content-end gap-2 mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i> Guardar
                    </button>
                    <a href="/Huacales/Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left-circle me-1"></i> Cancelar
                    </a>
                </div>
            </EditForm>
            @if (!string.IsNullOrWhiteSpace(ErrorMessage))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @ErrorMessage
                </div>
            }
        </div>
    </div>
</div>

@code {
    public EntradaHuacales Huacales { get; set; } = new();
    public string ErrorMessage { get; set; } = string.Empty;

    private async Task GuardarGuacal()
    {
        if (await HuacalesService.Existe(e => e.NombreCliente.ToLower().Trim() == Huacales.NombreCliente.ToLower().Trim()))
        {
            ErrorMessage = "Este nombre ya ha sido agregado.";
            return;
        }
        if (await HuacalesService.Guardar(Huacales))
        {
            NavigationManager.NavigateTo("/Huacales/Index");
        }
    }
}
